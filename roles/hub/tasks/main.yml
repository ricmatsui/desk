---

- name: install
  ansible.builtin.apt:
    name: "{{ item }}"
  loop:
    - build-essential
    - cmake
    - git
    - libasound2-dev
    - libclang-dev
    - libdbus-1-dev
    - libgl1-mesa-dev
    - libraspberrypi-dev
    - libssl-dev
    - libsystemd-dev
    - libudev-dev
    - libx11-dev
    - libxcursor-dev
    - libxi-dev
    - libxinerama-dev
    - libxrandr-dev
    - mesa-common-dev
    - mesa-utils
    - pkg-config
    - raspberrypi-kernel-headers
    - vim
    - wget
    - xinit
    - zram-tools
  tags:
    - apt

- name: clone panel-mipi-dbi
  ansible.builtin.git:
    repo: https://github.com/notro/panel-mipi-dbi.git
    dest: /opt/panel-mipi-dbi
    version: main

# https://github.com/notro/panel-mipi-dbi/wiki/Displays#pimoroni-display-hat-mini
- name: create panel.txt
  ansible.builtin.copy:
    dest: /opt/panel-mipi-dbi/panel.txt
    owner: root
    group: root
    mode: 'u=rw,g=r,o=r'
    content: |
      command 0x11 # exit sleep mode
      delay 120

      command 0x26 0x04 # gamma curve 3 select
      command 0x3A 0x05 # pixel format RGB565
      delay 20

      command 0x36 0x00
      delay 10

      command 0xBA 0x04 # enable gamma
      command 0x21      # invert colours
      command 0x13      # NORON partial off
      delay 10

      command 0xB1 0x06 0x01 0x01 # Frame rate control, ~100Hz
      command 0x29 # display on
  register: panel_txt

- name: create panel.bin
  ansible.builtin.shell:
    cmd: ./mipi-dbi-cmd /lib/firmware/panel.bin panel.txt
    chdir: /opt/panel-mipi-dbi
  when: panel_txt.changed
  notify: hub_reboot

- name: configure devices
  ansible.builtin.blockinfile:
    path: /boot/firmware/config.txt
    block: |
      [all]
      dtparam=i2c_arm=on
      dtparam=i2c_arm_baudrate=400000

      dtoverlay=mipi-dbi-spi,spi0-1,speed=40000000
      dtparam=width=240,height=240
      dtparam=write-only,cpha,cpol
      dtparam=dc-gpio=9
      #dtparam=backlight-gpio=13

      dtoverlay=pwm,pin=13,func=4
  notify: hub_reboot

- name: configure xorg
  ansible.builtin.copy:
    dest: /etc/X11/xorg.conf.d/99-mipi.conf
    owner: root
    group: root
    content: |
      Section "Device"
          Identifier "MIPI"
          Driver "modesetting"
          Option "kmsdev" "/dev/dri/card0"
      EndSection
      
      Section "Monitor"
          Identifier "MIPI-Monitor"
          Option "PreferredMode" "240x240"
      EndSection
      
      Section "Screen"
          Identifier "MIPI-Screen"
          Device "MIPI"
          Monitor "MIPI-Monitor"
          DefaultDepth 24
          SubSection "Display"
              Depth 24
              Modes "240x240"
          EndSubSection
      EndSection
  notify: hub_reboot

- name: join bluetooth group
  ansible.builtin.user:
    name: pi
    groups: bluetooth
    append: true
  notify: hub_reboot

- name: check swap
  ansible.builtin.shell:
    cmd: cat /proc/swaps | tail -n +2
  changed_when: false
  register: swap_result

- name: disable swap
  ansible.builtin.shell:
    cmd: "{{ item }}"
  loop:
    - dphys-swapfile swapoff
    - dphys-swapfile uninstall
  when: swap_result.stdout_lines|length > 0
  notify: hub_reboot

- name: configure zram
  ansible.builtin.lineinfile:
    path: /etc/default/zramswap
    line: "SIZE=512"
  notify: hub_reboot

- name: configure journal
  community.general.ini_file:
    path: /etc/systemd/journald.conf
    section: Journal
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  loop:
    - option: Storage
      value: volatile
    - option: RuntimeMaxUse
      value: 15M
  notify: hub_reboot

- name: disable services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: stopped
    enabled: false
  loop:
    - apt-daily.timer
    - apt-daily-upgrade.timer
    - dphys-swapfile
  notify: hub_reboot

- name: create sysroot directory
  ansible.builtin.file:
    path: cross/hub/sysroot
    state: directory
    recurse: true
  delegate_to: localhost

- name: copy sysroot
  ansible.builtin.shell:
    cmd: >
      rsync -avz --rsync-path="sudo rsync"
      --exclude /usr/share/man
      --exclude /usr/share/terminfo
      {{ ansible_user }}@{{ inventory_hostname }}:/{lib,usr}
      cross/hub/sysroot
  delegate_to: localhost
  tags:
    - sysroot

- name: build cross-compiler
  ansible.builtin.shell:
    cmd: docker compose build cross_hub_armv6
  delegate_to: localhost
  tags:
    - compile

- name: build
  ansible.builtin.shell:
    cmd: docker compose run --rm cross_hub_armv6
  delegate_to: localhost
  tags:
    - code
    - compile

- name: make directory
  ansible.builtin.file:
    path: /opt/desk
    owner: root
    group: root
    state: directory
  notify: hub_restart
  tags:
    - install

- name: copy executable
  ansible.builtin.copy:
    src: cross/hub/target/arm-unknown-linux-gnueabihf/release/desk
    dest: /opt/desk/desk
    owner: root
    group: root
    mode: 'u=rwx,g=rx,o=rx'
  notify: hub_restart
  tags:
    - code
    - install

- name: configure service
  ansible.builtin.template:
    src: desk.service
    dest: /etc/systemd/system
    owner: root
    group: root
  notify: hub_restart
  tags:
    - service
    - install

- name: enable service
  ansible.builtin.systemd:
    name: desk
    enabled: true
  notify: hub_restart
  tags:
    - install

